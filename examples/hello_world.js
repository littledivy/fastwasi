// deno-fmt-ignore
const binary = new Uint8Array([0,97,115,109,1,0,0,0,1,68,10,96,6,127,127,127,127,127,127,0,96,4,127,127,127,127,0,96,2,127,127,1,127,96,1,127,1,126,96,3,127,127,127,1,127,96,2,127,127,0,96,7,127,127,127,127,127,127,127,0,96,3,127,127,127,0,96,0,1,127,96,5,127,126,126,126,126,0,2,18,1,3,101,110,118,10,114,97,110,100,111,109,95,103,101,116,0,2,3,20,19,3,0,4,5,4,6,1,0,7,5,1,8,7,5,1,2,4,4,9,4,5,1,112,1,4,4,5,3,1,0,2,6,8,1,127,1,65,128,128,4,11,7,17,2,6,109,101,109,111,114,121,2,0,4,109,97,105,110,0,16,9,9,1,0,65,1,11,3,2,6,7,10,137,30,19,138,1,2,1,127,2,126,35,128,128,128,128,0,65,32,107,34,1,36,128,128,128,128,0,32,1,65,16,106,32,0,173,66,175,200,245,197,199,172,135,187,160,127,133,66,0,66,148,245,164,166,230,158,204,198,122,66,0,16,147,128,128,128,0,32,1,32,1,65,16,106,65,8,106,41,3,0,32,1,41,3,16,133,66,4,133,66,0,66,207,164,244,163,252,196,147,199,29,66,0,16,147,128,128,128,0,32,1,65,8,106,41,3,0,33,2,32,1,41,3,0,33,3,32,1,65,32,106,36,128,128,128,128,0,32,2,32,3,133,11,200,1,1,4,127,2,64,2,64,65,224,128,132,128,0,32,2,65,255,255,3,106,34,6,65,16,118,34,7,32,3,16,131,128,128,128,0,34,8,65,127,71,13,0,2,64,65,240,130,132,128,0,32,7,32,3,16,131,128,128,128,0,34,8,65,127,70,13,0,32,8,65,128,16,106,33,8,12,1,11,32,3,65,255,255,255,255,1,113,34,3,63,0,34,9,65,16,116,34,8,106,65,127,106,65,0,32,3,107,113,32,8,107,34,3,65,16,118,34,8,32,7,106,64,0,65,1,72,13,1,32,8,32,9,106,33,8,32,3,69,13,0,32,9,32,8,16,132,128,128,128,0,11,32,0,32,6,65,128,128,124,113,32,2,32,4,16,133,128,128,128,0,54,2,4,32,0,32,8,65,16,116,54,2,0,32,0,65,0,59,1,8,15,11,32,0,65,1,59,1,8,11,158,2,7,2,127,1,126,2,127,1,126,4,127,1,126,2,127,32,0,40,2,4,34,3,65,7,116,33,4,66,0,32,2,173,66,255,255,255,255,1,131,125,33,5,65,0,33,6,3,127,2,64,32,6,32,3,71,13,0,65,127,15,11,2,64,2,64,32,0,40,2,0,34,7,32,6,65,4,116,106,34,2,65,8,106,41,3,0,34,8,66,0,83,13,0,32,2,41,3,0,123,32,8,123,124,167,32,1,73,13,1,11,32,6,65,7,116,34,9,65,128,1,106,33,10,3,64,32,9,32,10,79,13,1,32,9,32,4,32,9,32,4,75,27,34,11,32,9,107,33,12,32,9,65,16,116,173,34,8,32,5,131,33,13,65,0,33,2,2,64,3,64,2,64,32,12,32,2,71,13,0,32,11,33,14,12,2,11,65,255,1,32,9,32,2,106,34,14,65,7,113,34,15,65,7,115,118,65,1,32,15,116,113,32,7,32,14,65,3,118,106,45,0,0,113,69,13,1,32,2,65,1,106,34,2,32,1,73,13,0,32,13,32,8,82,13,0,11,32,0,32,9,32,1,65,0,16,143,128,128,128,0,32,9,15,11,32,14,65,1,106,33,9,12,0,11,11,32,6,65,1,106,33,6,12,0,11,11,181,1,1,3,127,2,64,32,0,65,255,15,75,13,0,65,224,128,132,128,0,32,0,32,1,65,128,16,32,1,65,128,16,73,27,32,0,107,16,141,128,128,128,0,11,2,64,32,1,65,129,16,73,13,0,65,0,33,2,2,64,65,0,40,2,244,130,132,128,0,13,0,65,0,65,128,32,54,2,244,130,132,128,0,65,0,32,1,65,127,106,34,1,65,16,116,34,3,54,2,240,130,132,128,0,3,64,32,2,65,128,128,4,70,13,1,32,3,32,2,106,34,4,66,0,55,3,8,32,4,66,0,55,3,0,32,2,65,16,106,33,2,12,0,11,11,65,240,130,132,128,0,65,128,16,32,0,32,0,65,128,16,73,27,34,2,65,128,112,106,32,1,32,2,107,16,141,128,128,128,0,11,11,51,0,2,64,32,2,65,255,255,255,255,1,113,34,2,69,13,0,2,64,32,2,105,65,1,71,13,0,65,0,32,2,107,32,0,113,15,11,32,0,32,0,32,2,112,107,33,1,11,32,1,11,129,1,1,3,127,2,64,32,2,40,2,4,65,255,255,3,106,34,7,65,128,128,124,113,32,4,79,13,0,32,0,65,0,41,3,232,128,132,128,0,55,2,0,15,11,2,64,32,4,65,255,255,3,106,34,8,65,16,118,34,9,32,7,65,16,118,34,7,70,13,0,32,2,40,2,0,65,255,255,3,106,65,16,118,34,2,32,9,106,32,2,32,7,106,16,132,128,128,128,0,11,32,0,32,8,65,128,128,124,113,32,4,32,5,16,133,128,128,128,0,54,2,0,32,0,65,1,58,0,4,11,41,1,1,127,32,1,40,2,0,65,255,255,3,106,65,16,118,34,4,32,4,32,1,40,2,4,65,255,255,3,106,65,16,118,106,16,132,128,128,128,0,11,227,12,3,3,127,1,126,17,127,35,128,128,128,128,0,65,48,107,34,6,36,128,128,128,128,0,2,64,2,64,32,2,32,3,65,255,255,255,255,1,113,34,7,32,7,32,2,73,27,34,7,65,129,128,2,73,13,0,32,1,65,200,0,106,33,8,2,64,32,1,40,2,80,13,0,2,64,2,64,32,8,40,2,0,34,7,13,0,65,1,33,7,12,1,11,32,7,65,124,106,53,2,0,66,208,0,126,34,9,32,9,66,228,0,130,125,66,228,0,124,66,208,0,128,167,33,7,11,32,6,65,8,106,65,0,54,2,0,32,6,66,0,55,3,0,32,6,65,16,106,32,1,66,1,65,32,32,7,103,107,173,134,167,34,7,65,8,32,7,65,8,75,27,34,7,65,15,106,65,124,113,34,10,32,7,65,2,116,106,34,11,32,7,65,3,116,106,16,137,128,128,128,0,2,64,32,6,47,1,24,34,12,13,0,32,6,40,2,16,34,12,65,8,106,34,13,32,7,54,2,0,32,12,32,10,32,12,106,54,2,4,32,12,32,11,32,12,106,54,2,0,32,6,32,12,65,12,106,34,12,54,2,0,32,12,65,0,32,13,40,2,0,16,145,128,128,128,0,33,12,32,6,32,7,173,66,208,0,126,66,228,0,128,167,34,14,54,2,8,2,64,32,1,40,2,76,69,13,0,65,0,33,15,65,0,33,16,2,64,32,8,40,2,0,34,17,69,13,0,32,17,65,124,106,40,2,0,33,16,11,32,12,65,116,106,33,18,32,12,65,120,106,33,19,32,12,65,124,106,33,20,32,17,65,116,106,40,2,0,33,21,32,17,65,120,106,40,2,0,33,22,65,0,33,23,2,64,3,64,32,23,32,16,70,13,1,2,64,32,17,32,23,106,44,0,0,65,127,74,13,0,32,23,65,3,116,33,24,32,22,32,23,65,2,116,106,40,2,0,33,25,2,64,32,15,69,13,0,32,20,40,2,0,34,10,65,127,106,34,13,32,25,16,129,128,128,128,0,34,9,167,113,33,7,32,9,66,57,136,167,33,26,3,64,32,12,32,7,106,44,0,0,34,11,69,13,1,32,10,69,13,1,2,64,32,11,65,127,74,13,0,32,26,32,11,65,255,0,113,71,13,0,32,19,40,2,0,32,7,65,2,116,106,40,2,0,32,25,70,13,2,11,32,10,65,127,106,33,10,32,7,65,1,106,32,13,113,33,7,12,0,11,11,32,21,32,24,106,33,13,32,20,40,2,0,65,127,106,34,11,32,25,16,129,128,128,128,0,34,9,167,113,33,7,2,64,3,64,32,12,32,7,106,34,10,44,0,0,65,127,74,13,1,32,7,65,1,106,32,11,113,33,7,12,0,11,11,32,10,32,9,66,57,136,167,65,128,1,114,58,0,0,32,19,40,2,0,32,7,65,2,116,106,32,25,54,2,0,32,18,40,2,0,32,7,65,3,116,106,32,13,41,2,0,55,2,0,32,14,65,127,106,33,14,32,15,65,1,106,34,15,32,1,40,2,76,70,13,2,11,32,23,65,1,106,33,23,12,0,11,11,32,6,32,14,54,2,8,32,6,32,15,54,2,4,11,65,0,33,12,32,1,65,0,54,2,76,32,8,41,2,0,33,9,32,8,32,6,41,3,0,55,2,0,32,6,65,8,106,34,7,40,2,0,33,10,32,7,32,8,65,8,106,34,11,40,2,0,54,2,0,32,11,32,10,54,2,0,32,6,32,9,55,3,0,11,32,6,32,1,16,138,128,128,128,0,32,12,69,13,0,32,0,32,12,59,1,8,12,2,11,32,6,65,16,106,32,1,40,2,0,32,2,32,3,32,4,32,5,32,1,40,2,4,40,2,0,17,128,128,128,128,0,0,2,64,32,6,47,1,24,34,7,69,13,0,32,0,32,7,59,1,8,12,2,11,32,6,40,2,20,33,4,32,6,40,2,16,34,2,16,129,128,128,128,0,33,9,2,64,2,64,32,8,40,2,0,34,13,13,0,32,9,167,33,7,65,0,33,11,65,127,33,26,12,1,11,32,13,65,124,106,40,2,0,34,11,65,127,106,34,26,32,9,167,113,33,7,11,32,13,65,120,106,33,3,32,13,65,124,106,33,19,32,9,66,57,136,167,33,25,32,11,33,10,2,64,2,64,3,64,32,13,32,7,106,34,23,44,0,0,34,12,69,13,1,32,10,69,13,1,2,64,2,64,32,12,65,127,74,13,0,32,25,32,12,65,255,0,113,71,13,0,32,3,40,2,0,32,7,65,2,116,106,40,2,0,32,2,71,13,1,32,13,65,116,106,40,2,0,32,7,65,3,116,106,33,7,12,4,11,32,7,32,11,32,12,65,1,70,27,32,11,32,11,32,19,40,2,0,70,27,33,11,11,32,10,65,127,106,33,10,32,7,65,1,106,32,26,113,33,7,12,0,11,11,32,19,40,2,0,33,12,32,1,32,1,40,2,80,65,127,106,54,2,80,32,13,32,11,106,32,23,32,11,32,12,73,34,12,27,32,25,65,128,1,114,58,0,0,32,1,40,2,72,65,116,106,34,10,40,2,0,33,13,32,10,40,2,4,33,10,32,1,32,1,40,2,76,65,1,106,54,2,76,32,10,32,11,32,7,32,12,27,34,7,65,2,116,106,32,2,54,2,0,32,13,32,7,65,3,116,106,33,7,11,32,7,32,4,54,2,4,32,7,32,2,54,2,0,32,0,32,4,54,2,4,32,0,32,2,54,2,0,32,0,65,0,59,1,8,12,1,11,2,64,2,64,32,1,66,1,65,32,32,7,65,127,106,103,107,173,134,167,34,13,103,65,31,115,34,23,65,2,116,106,65,8,106,34,25,40,2,0,34,10,13,0,32,6,65,16,106,32,1,32,13,32,23,16,139,128,128,128,0,32,6,47,1,20,34,12,13,1,32,6,40,2,16,33,10,11,65,128,128,4,32,13,110,33,11,32,10,33,12,2,64,3,64,32,11,32,12,34,7,47,1,12,32,7,65,14,106,45,0,0,65,16,116,114,71,13,1,32,7,40,2,4,34,12,32,10,71,13,0,32,6,32,1,32,13,32,23,16,139,128,128,128,0,32,6,47,1,4,34,12,13,2,32,6,40,2,0,34,12,32,7,54,2,0,32,12,32,7,40,2,4,54,2,4,32,7,32,12,54,2,4,32,12,40,2,4,32,12,54,2,0,12,0,11,11,32,25,32,7,54,2,0,32,7,32,7,47,1,12,32,7,65,14,106,34,10,45,0,0,65,16,116,114,34,12,65,1,106,34,11,59,1,12,32,10,32,11,65,128,128,4,113,65,16,118,58,0,0,32,7,32,12,65,3,118,106,65,20,106,34,10,65,1,32,12,65,7,113,116,32,10,45,0,0,114,58,0,0,32,7,32,7,47,1,16,32,7,65,18,106,34,10,45,0,0,65,16,116,114,65,1,106,34,11,59,1,16,32,10,32,11,65,128,128,4,113,65,16,118,58,0,0,32,7,40,2,8,32,13,32,12,108,106,33,26,65,0,33,12,11,2,64,32,12,69,13,0,32,0,32,12,59,1,8,12,1,11,32,0,32,2,54,2,4,32,0,32,26,54,2,0,32,0,65,0,59,1,8,11,32,6,65,48,106,36,128,128,128,128,0,11,134,1,1,1,127,35,128,128,128,128,0,65,16,107,34,3,36,128,128,128,128,0,2,64,2,64,32,2,13,0,32,0,66,0,55,2,0,32,0,65,0,59,1,8,12,1,11,32,3,32,1,40,2,0,32,2,65,4,65,0,65,0,32,1,40,2,4,40,2,0,17,128,128,128,128,0,0,2,64,32,3,47,1,8,34,1,69,13,0,32,0,32,1,59,1,8,12,1,11,32,0,65,0,59,1,8,32,0,32,2,54,2,4,32,0,32,3,40,2,0,54,2,0,11,32,3,65,16,106,36,128,128,128,128,0,11,109,1,2,127,35,128,128,128,128,0,65,16,107,34,2,36,128,128,128,128,0,2,64,32,0,40,2,0,34,3,69,13,0,32,2,32,3,65,116,106,54,2,8,32,2,32,3,65,124,106,40,2,0,34,3,65,15,106,65,124,113,32,3,65,12,108,106,54,2,12,32,1,32,2,65,8,106,16,142,128,128,128,0,32,0,65,0,54,2,8,32,0,65,0,54,2,0,11,32,2,65,16,106,36,128,128,128,128,0,11,228,2,1,3,127,35,128,128,128,128,0,65,32,107,34,4,36,128,128,128,128,0,32,4,65,16,106,32,1,40,2,0,65,128,128,4,65,128,128,4,65,0,65,0,32,1,40,2,4,40,2,0,17,128,128,128,128,0,0,2,64,2,64,32,4,47,1,24,34,5,69,13,0,32,0,32,5,59,1,4,12,1,11,32,4,40,2,16,33,6,65,24,33,5,2,64,32,2,65,128,192,0,75,13,0,65,128,128,4,32,2,110,65,3,118,65,23,106,65,252,255,1,113,33,5,11,32,4,32,1,32,5,16,137,128,128,128,0,2,64,32,4,47,1,8,34,5,69,13,0,32,0,32,5,59,1,4,32,4,65,128,128,4,54,2,20,32,4,32,6,54,2,16,32,1,40,2,0,32,4,65,16,106,65,128,128,4,65,0,32,1,40,2,4,40,2,8,17,129,128,128,128,0,0,12,1,11,32,4,40,2,0,34,5,65,0,59,1,16,32,5,65,0,59,1,12,32,5,32,6,54,2,8,32,5,65,18,106,65,0,58,0,0,32,5,65,14,106,65,0,58,0,0,32,5,32,5,54,2,4,32,5,32,5,54,2,0,32,1,32,3,65,2,116,106,65,8,106,32,5,54,2,0,32,5,65,20,106,33,3,65,1,33,1,2,64,32,2,65,128,192,0,75,13,0,65,128,128,4,32,2,110,65,3,118,33,1,11,32,3,65,0,32,1,16,145,128,128,128,0,26,32,0,32,5,54,2,0,32,0,65,0,59,1,4,11,32,4,65,32,106,36,128,128,128,128,0,11,142,1,1,2,127,35,128,128,128,128,0,65,240,0,107,34,0,36,128,128,128,128,0,32,0,65,8,106,65,140,128,132,128,0,65,212,0,16,146,128,128,128,0,26,32,0,65,224,0,106,32,0,65,8,106,65,16,65,1,65,0,65,0,16,136,128,128,128,0,2,64,32,0,47,1,104,13,0,32,0,40,2,96,33,1,11,32,0,65,16,54,2,4,32,0,32,1,54,2,0,32,0,65,16,16,128,128,128,128,0,33,1,32,0,65,208,0,106,32,0,65,8,106,16,138,128,128,128,0,32,0,65,240,0,106,36,128,128,128,128,0,32,1,11,16,0,32,0,32,1,32,2,65,1,16,143,128,128,128,0,11,91,1,2,127,35,128,128,128,128,0,65,16,107,34,2,36,128,128,128,128,0,2,64,32,1,40,2,4,34,3,69,13,0,32,2,32,3,54,2,12,32,2,32,1,40,2,0,54,2,8,32,0,40,2,0,32,2,65,8,106,65,4,65,0,32,0,40,2,4,40,2,8,17,129,128,128,128,0,0,11,32,2,65,16,106,36,128,128,128,128,0,11,76,1,1,127,32,3,65,1,113,33,4,2,64,3,64,32,2,69,13,1,32,0,40,2,0,32,1,65,3,118,106,34,3,32,3,45,0,0,65,126,32,1,65,7,113,34,3,119,113,32,4,32,3,116,114,58,0,0,32,1,65,1,106,33,1,32,2,65,127,106,33,2,12,0,11,11,11,8,0,16,140,128,128,128,0,11,44,1,1,127,2,64,32,2,69,13,0,32,0,33,3,3,64,32,3,32,1,58,0,0,32,3,65,1,106,33,3,32,2,65,127,106,34,2,13,0,11,11,32,0,11,66,1,1,127,2,64,32,2,69,13,0,32,2,65,127,106,33,2,32,0,33,3,3,64,32,3,32,1,45,0,0,58,0,0,32,2,69,13,1,32,2,65,127,106,33,2,32,1,65,1,106,33,1,32,3,65,1,106,33,3,12,0,11,11,32,0,11,117,1,1,126,32,0,32,4,32,1,126,32,2,32,3,126,124,32,3,66,32,136,34,4,32,1,66,32,136,34,2,126,124,32,3,66,255,255,255,255,15,131,34,3,32,1,66,255,255,255,255,15,131,34,1,126,34,5,66,32,136,32,3,32,2,126,124,34,3,66,32,136,124,32,3,66,255,255,255,255,15,131,32,4,32,1,126,124,34,3,66,32,136,124,55,3,8,32,0,32,3,66,32,134,32,5,66,255,255,255,255,15,131,132,55,3,0,11,11,120,1,0,65,128,128,4,11,112,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,1,0,16,0,0,0,0,0,0,0,0,0,0,0,])

const { args_get, random_get, print } = wasi;

function benchSync(name, n, innerLoop) {
  const t1 = Date.now();
  for (let i = 0; i < n; i++) {
    innerLoop(i);
  }
  const t2 = Date.now();
  print(benchStats(name, n, t1, t2));
}

function benchStats(name, n, t1, t2) {
  const dt = (t2 - t1) / 1e3;
  const r = n / dt;
  const ns = Math.floor(dt / n * 1e9);
  return `${name}:${" ".repeat(30 - name.length)}\t` +
    `n = ${n}, dt = ${dt.toFixed(3)}s, r = ${r.toFixed(0)}/s, t = ${ns}ns/op\n`;
}

WebAssembly.compile(binary).then(async (module) => {
  const instance = await WebAssembly.instantiate(module, {
    env: {
      "args_get": args_get,
      "random_get": random_get,
    },
  });
  const { main, memory } = instance.exports;
  if (main() !== 0) {
    throw new Error("main() failed");
  }
  while (true) {
    benchSync(`main (${memory.buffer.byteLength} bytes)`, 1e3, main);
  }
});
